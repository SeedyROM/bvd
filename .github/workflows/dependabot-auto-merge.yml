name: Dependabot Auto-merge

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: write
  pull-requests: write
  checks: read

concurrency:
  group: dependabot-auto-merge-${{ github.event.pull_request.number }}
  cancel-in-progress: false

jobs:
  auto-merge:
    name: Auto-merge Dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get Dependabot metadata
      id: metadata
      uses: dependabot/fetch-metadata@v2
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"

    - name: Wait for CI to complete
      uses: lewagon/wait-on-check-action@v1.4.0
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        check-name: 'Test Python 3.12 on ubuntu-latest'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 30
        allowed-conclusions: success

    - name: Wait for lint check
      uses: lewagon/wait-on-check-action@v1.4.0
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        check-name: 'Lint and Format Check'
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 30
        allowed-conclusions: success

    - name: Auto-merge minor and patch updates
      if: steps.metadata.outputs.update-type == 'version-update:semver-minor' || steps.metadata.outputs.update-type == 'version-update:semver-patch'
      run: |
        gh pr merge --auto --squash "${{ github.event.pull_request.html_url }}"
        gh pr review --approve "${{ github.event.pull_request.html_url }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Comment on major updates
      if: steps.metadata.outputs.update-type == 'version-update:semver-major'
      run: |
        gh pr comment "${{ github.event.pull_request.html_url }}" --body "ðŸš¨ This is a major version update. Please review manually before merging."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Auto-approve GitHub Actions updates
      if: steps.metadata.outputs.package-ecosystem == 'github_actions'
      run: |
        gh pr review --approve "${{ github.event.pull_request.html_url }}"
        gh pr merge --auto --squash "${{ github.event.pull_request.html_url }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
